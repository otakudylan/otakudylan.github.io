{"title":"非递归遍历二叉树","uid":"c3541de706edb8ec6eec9b5bf2bc38d1","slug":"leetcode-非递归遍历二叉树","date":"2022-01-05T16:36:31.000Z","updated":"2022-01-05T16:39:24.186Z","comments":true,"path":"api/articles/leetcode-非递归遍历二叉树.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/l4s8z6unVDYITN9.jpg","content":"<pre class=\"line-numbers language-C++\" data-language=\"C++\"><code class=\"language-C++\">&#x2F;&#x2F; 前序\nvector&lt;int&gt;preorderTraversal(TreeNode* root) &#123;\n\tvector&lt;int&gt; res;\n\tif (!root) return res;\n\tstack&lt;TreeNode*&gt; st;\n\tTreeNode* cur &#x3D; root;\n\twhile (!st.empty() || cur) &#123;\n\t\twhile (cur) &#123;\n\t\t\tres.push_back(cur-&gt;val);\n\t\t\tst.push(cur);\n\t\t\tcur &#x3D; cur-&gt;left;\n\t\t&#125;\n\t\tcur &#x3D; st.top();\n\t\tst.pop();\n\t\tcur &#x3D; cur-&gt;right;\n\t&#125;\n\treturn res;\n&#125;\n\n&#x2F;&#x2F; 中序\nvector&lt;int&gt; inorderTraversal(TreeNode* root) &#123;\n\tvector&lt;int&gt; res;\n\tif (!root) return res;\n\tstack&lt;TreeNode*&gt; st;\n\tTreeNode* cur &#x3D; root;\n\twhile (!st.empty() || cur) &#123;\n\t\twhile (cur) &#123;\n\t\t\tst.push(cur);\n\t\t\tcur &#x3D; cur-&gt;left;\n\t\t&#125;\n\t\tcur &#x3D; st.top();\n\t\tst.pop();\n\t\tres.push_back(cur-&gt;val);\n\t\tcur &#x3D; cur-&gt;right;\n\t&#125;\n\treturn res;\n&#125;\n\n&#x2F;&#x2F; 后序\nvector&lt;int&gt; postorderTraversal(TreeNode* root) &#123;\n\tvector&lt;int&gt; res;\n\tif (!root) return res;\n\tstack&lt;TreeNode*&gt; st;\n\tTreeNode* cur &#x3D; root;\n\twhile (!st.empty() || cur) &#123;\n\t\twhile (cur) &#123;\n\t\t\tres.insert(res.begin(), cur-&gt;val);\n\t\t\tst.push(cur);\n\t\t\tcur &#x3D; cur-&gt;right;\n\t\t&#125;\n\t\tcur &#x3D; st.top();\n\t\tst.pop();\n\t\tcur &#x3D; cur-&gt;left;\n\t&#125;\n\treturn res;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","feature":true,"text":"&#x2F;&#x2F; 前序 vector&lt;int&gt;preorderTraversal(TreeNode* root) &#123; vector&lt;int&gt; res; if (!root) return res; stack&lt;TreeNode*&g...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":1,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"leetcode","slug":"leetcode","count":1,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":1,"path":"api/tags/二叉树.json"}],"toc":"","author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"右值引用、移动语义和完美转发","uid":"76474e446991cce6bc400a1a99996030","slug":"Cpp-右值引用、移动语义和完美转发","date":"2022-01-07T13:23:56.000Z","updated":"2022-01-07T15:24:51.360Z","comments":true,"path":"api/articles/Cpp-右值引用、移动语义和完美转发.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"右值引用","slug":"右值引用","count":1,"path":"api/tags/右值引用.json"},{"name":"移动语义","slug":"移动语义","count":1,"path":"api/tags/移动语义.json"},{"name":"完美转发","slug":"完美转发","count":1,"path":"api/tags/完美转发.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"类的特殊非静态成员函数","uid":"52d648ff3e6bea3e12a567ee8b6734e9","slug":"Cpp-类的特殊非静态成员函数","date":"2022-01-05T13:04:21.000Z","updated":"2022-01-05T16:29:11.027Z","comments":true,"path":"api/articles/Cpp-类的特殊非静态成员函数.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"类里面存在六个特种成员函数 默认构造函数 一般形式：Obj(); 拷贝构造函数 一般形式：Obj(const Obj&amp;); 拷贝赋值运算符一般形式：Obj&amp; operator=(const Obj&amp;);或Obj&amp; operator=(Obj); 移...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"成员函数","slug":"成员函数","count":1,"path":"api/tags/成员函数.json"},{"name":"默认提供","slug":"默认提供","count":1,"path":"api/tags/默认提供.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}