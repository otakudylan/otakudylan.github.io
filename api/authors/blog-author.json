{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"左值和右值","uid":"72f33999f30e7ed774f0242356dfc348","slug":"Cpp-左值和右值","date":"2022-01-07T14:48:56.000Z","updated":"2022-01-07T15:31:59.350Z","comments":true,"path":"api/articles/Cpp-左值和右值.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"值的类别左值（lvalue）int&amp; lvalue(); 特点： 有标识符，可以取地址 非const左值可以放在赋值运算符的左侧。注：const左值只有在初始化时可以放在赋值运算符左侧；左值和右值表达式都可以是const或non-const。 常见左值： 变量，函数名字 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"左值","slug":"左值","count":1,"path":"api/tags/左值.json"},{"name":"右值","slug":"右值","count":1,"path":"api/tags/右值.json"},{"name":"将亡值","slug":"将亡值","count":1,"path":"api/tags/将亡值.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"右值引用、移动语义和完美转发","uid":"76474e446991cce6bc400a1a99996030","slug":"Cpp-右值引用、移动语义和完美转发","date":"2022-01-07T13:23:56.000Z","updated":"2022-01-07T15:24:51.360Z","comments":true,"path":"api/articles/Cpp-右值引用、移动语义和完美转发.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"右值引用","slug":"右值引用","count":1,"path":"api/tags/右值引用.json"},{"name":"移动语义","slug":"移动语义","count":1,"path":"api/tags/移动语义.json"},{"name":"完美转发","slug":"完美转发","count":1,"path":"api/tags/完美转发.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"非递归遍历二叉树","uid":"c3541de706edb8ec6eec9b5bf2bc38d1","slug":"leetcode-非递归遍历二叉树","date":"2022-01-05T16:36:31.000Z","updated":"2022-01-05T16:39:24.186Z","comments":true,"path":"api/articles/leetcode-非递归遍历二叉树.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/l4s8z6unVDYITN9.jpg","text":"&#x2F;&#x2F; 前序 vector&lt;int&gt;preorderTraversal(TreeNode* root) &#123; vector&lt;int&gt; res; if (!root) return res; stack&lt;TreeNode*&g...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":1,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"leetcode","slug":"leetcode","count":1,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":1,"path":"api/tags/二叉树.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"类的特殊非静态成员函数","uid":"52d648ff3e6bea3e12a567ee8b6734e9","slug":"Cpp-类的特殊非静态成员函数","date":"2022-01-05T13:04:21.000Z","updated":"2022-01-05T16:29:11.027Z","comments":true,"path":"api/articles/Cpp-类的特殊非静态成员函数.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"类里面存在六个特种成员函数 默认构造函数 一般形式：Obj(); 拷贝构造函数 一般形式：Obj(const Obj&amp;); 拷贝赋值运算符一般形式：Obj&amp; operator=(const Obj&amp;);或Obj&amp; operator=(Obj); 移...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"成员函数","slug":"成员函数","count":1,"path":"api/tags/成员函数.json"},{"name":"默认提供","slug":"默认提供","count":1,"path":"api/tags/默认提供.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"auto类型推导","uid":"f7cb7d701b00fc37f4d06f66b3862db0","slug":"Cpp-auto类型推导","date":"2022-01-04T15:25:31.000Z","updated":"2022-01-04T16:07:26.260Z","comments":true,"path":"api/articles/Cpp-auto类型推导.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"auto类型推导一般情况，auto类型推导和模板类型推导是一模一样的，但是auto类型推导会假定用大括号括起来的初始化表达式代表一个std::initializer_list,而这种情况下，形参为T的模板无法推导T的类型。 一般情况auto类型推导和模板类型推导可以建立一一映射：...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"auto","slug":"auto","count":1,"path":"api/tags/auto.json"},{"name":"类型推导","slug":"类型推导","count":2,"path":"api/tags/类型推导.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"模板类型推导","uid":"74bd91e54bf2c495459c34d0d276fa06","slug":"Cpp-模板类型推导","date":"2022-01-03T12:32:36.000Z","updated":"2022-01-05T16:15:49.129Z","comments":true,"path":"api/articles/Cpp-模板类型推导.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/eukLiQmY5qfdhns.jpg","text":"类型推导C++是静态类型语言，所有的类型推导都是在编译期间完成的。 模板类型推导函数模板调用的一般形式为： template&lt;typename T&gt; void f(ParamType param); f(expr); 类型推导一共分三种一般情况和两种特殊情况 情况1：...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"C++","slug":"C","count":5,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"},{"name":"template","slug":"template","count":1,"path":"api/tags/template.json"},{"name":"类型推导","slug":"类型推导","count":2,"path":"api/tags/类型推导.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"UE4-GAS","uid":"28e8be842274bcbbc24c76b0de30d4ae","slug":"UE4-GAS","date":"2022-01-03T08:02:28.000Z","updated":"2022-01-05T16:15:56.290Z","comments":true,"path":"api/articles/UE4-GAS.json","keywords":"C++,python,图形学,UE4,leetcode","cover":"https://s2.loli.net/2022/01/03/Ym9bIshjoP2ER7M.jpg","text":"AbilitySystemComponentASC提供了三种不同的复制模式，用以复制GameplayEffects、GameplayTags 和 GameplayCues，分别是Full, Mixed, 和 Minimal。Attributes是由 AttributeSet复制。...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"UE4","slug":"UE4","count":1,"path":"api/categories/UE4.json"}],"tags":[{"name":"UE4","slug":"UE4","count":1,"path":"api/tags/UE4.json"},{"name":"GAS","slug":"GAS","count":1,"path":"api/tags/GAS.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/02/Uh28kIuHP3TD4tc.jpg","link":"/","description":"No Game No Life","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":3,"tags":21,"word_count":"16k","post_count":7}